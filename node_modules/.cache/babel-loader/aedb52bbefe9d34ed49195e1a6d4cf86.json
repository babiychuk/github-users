{"ast":null,"code":"import * as API from '../../services/API';\nimport * as types from '../types';\nexport const getUsers = () => async dispatch => {\n  dispatch({\n    type: types.GET_USERS_START\n  });\n\n  try {\n    const {\n      data,\n      status\n    } = await API.users.list();\n    if (status < 200 && status >= 300) throw new Error('Something went wrong');\n    dispatch({\n      type: types.GET_USERS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response, _error$response2;\n\n    dispatch({\n      type: types.GET_USERS_FAILURE\n    });\n    if (+(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) return;\n    console.log(error === null || error === void 0 ? void 0 : (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data);\n  }\n};\nexport const getUserProfile = user_name => async dispatch => {\n  dispatch({\n    type: types.GET_USER_PROFILE_START\n  });\n\n  try {\n    const {\n      data,\n      status\n    } = await API.users.page(user_name);\n    if (status < 200 && status >= 300) throw new Error('Something went wrong');\n    dispatch({\n      type: types.GET_USER_PROFILE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    var _error$response3, _error$response4;\n\n    dispatch({\n      type: types.GET_USER_PROFILE_FAILURE\n    });\n    if (+(error === null || error === void 0 ? void 0 : (_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) return;\n    console.log(error === null || error === void 0 ? void 0 : (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data);\n  }\n};","map":{"version":3,"sources":["/Users/evgeniy/React/user-list/src/redux/users/actions.js"],"names":["API","types","getUsers","dispatch","type","GET_USERS_START","data","status","users","list","Error","GET_USERS_SUCCESS","payload","error","GET_USERS_FAILURE","response","console","log","getUserProfile","user_name","GET_USER_PROFILE_START","page","GET_USER_PROFILE_SUCCESS","GET_USER_PROFILE_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,oBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,UAAvB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC5CA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEH,KAAK,CAACI;AAAd,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMP,GAAG,CAACQ,KAAJ,CAAUC,IAAV,EAA/B;AACA,QAAIF,MAAM,GAAG,GAAT,IAAgBA,MAAM,IAAI,GAA9B,EAAmC,MAAM,IAAIG,KAAJ,CAAU,sBAAV,CAAN;AACnCP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,KAAK,CAACU,iBAAd;AAAiCC,MAAAA,OAAO,EAAEN;AAA1C,KAAD,CAAR;AACD,GAJD,CAIE,OAAOO,KAAP,EAAc;AAAA;;AACdV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,KAAK,CAACa;AAAd,KAAD,CAAR;AACA,QAAI,EAACD,KAAD,aAACA,KAAD,0CAACA,KAAK,CAAEE,QAAR,oDAAC,gBAAiBR,MAAlB,MAA6B,GAAjC,EAAsC;AACtCS,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,aAAYA,KAAZ,2CAAYA,KAAK,CAAEE,QAAnB,qDAAY,iBAAiBT,IAA7B;AACD;AACF,CAXI;AAaL,OAAO,MAAMY,cAAc,GAAIC,SAAD,IAAe,MAAMhB,QAAN,IAAkB;AAC7DA,EAAAA,QAAQ,CAAC;AAAEC,IAAAA,IAAI,EAAEH,KAAK,CAACmB;AAAd,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEd,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAmB,MAAMP,GAAG,CAACQ,KAAJ,CAAUa,IAAV,CAAeF,SAAf,CAA/B;AACA,QAAIZ,MAAM,GAAG,GAAT,IAAgBA,MAAM,IAAI,GAA9B,EAAmC,MAAM,IAAIG,KAAJ,CAAU,sBAAV,CAAN;AACnCP,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,KAAK,CAACqB,wBAAd;AAAwCV,MAAAA,OAAO,EAAEN;AAAjD,KAAD,CAAR;AACD,GAJD,CAIE,OAAOO,KAAP,EAAc;AAAA;;AACdV,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEH,KAAK,CAACsB;AAAd,KAAD,CAAR;AACA,QAAI,EAACV,KAAD,aAACA,KAAD,2CAACA,KAAK,CAAEE,QAAR,qDAAC,iBAAiBR,MAAlB,MAA6B,GAAjC,EAAsC;AACtCS,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,aAAYA,KAAZ,2CAAYA,KAAK,CAAEE,QAAnB,qDAAY,iBAAiBT,IAA7B;AACD;AACF,CAXM","sourcesContent":["import * as API from '../../services/API';\nimport * as types from '../types';\n\nexport const getUsers = () => async dispatch => {\n    dispatch({ type: types.GET_USERS_START });\n    try {\n      const { data, status } = await API.users.list();\n      if (status < 200 && status >= 300) throw new Error('Something went wrong');\n      dispatch({ type: types.GET_USERS_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: types.GET_USERS_FAILURE });\n      if (+error?.response?.status === 401) return;\n      console.log(error?.response?.data);\n    }\n  };\n\n  export const getUserProfile = (user_name) => async dispatch => {\n    dispatch({ type: types.GET_USER_PROFILE_START });\n    try {\n      const { data, status } = await API.users.page(user_name);\n      if (status < 200 && status >= 300) throw new Error('Something went wrong');\n      dispatch({ type: types.GET_USER_PROFILE_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: types.GET_USER_PROFILE_FAILURE });\n      if (+error?.response?.status === 401) return;\n      console.log(error?.response?.data);\n    }\n  };"]},"metadata":{},"sourceType":"module"}