{"ast":null,"code":"var _jsxFileName = \"/Users/evgeniy/React/user-list/src/components/UserProfile/index.jsx\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { getUsers, editUser, saveChange, postUser, selectUser, deleteUser } from '../store/actions';\nimport './userList.css';\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst UsersList = ({\n  users\n}) => {\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [errorValid, setErrorValid] = useState(false);\n  const [disableBut, setDisableBut] = useState(false);\n  const [editModal, setEditModal] = useState(false);\n  const [modalSucc, setModalSucc] = useState(false);\n  const [delModal, setDelModal] = useState(false);\n  const [textModal, setTextModal] = useState('отредактирован');\n  const headRows = [{\n    id: 'id',\n    numeric: false,\n    label: 'id'\n  }, {\n    id: 'name',\n    numeric: true,\n    label: 'name'\n  }, {\n    id: 'surname',\n    numeric: true,\n    label: 'surname'\n  }, {\n    id: 'desc',\n    numeric: true,\n    label: 'desc'\n  }, {\n    id: 'edit',\n    numeric: true,\n    label: 'Редактировать'\n  }, {\n    id: 'delete',\n    numeric: true,\n    label: 'Удалить'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: \"m020\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    className: \"tableHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, headRows.map(row => /*#__PURE__*/React.createElement(TableCell, {\n    key: row.id,\n    align: row.numeric ? 'right' : 'left',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, row.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, users.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user, num) => /*#__PURE__*/React.createElement(TableRow, {\n    key: user.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, user.id), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, user.name), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, user.surname), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, user.desc), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => {\n      editUser(user.id);\n      setEditModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 40\n    }\n  }, /*#__PURE__*/React.createElement(EditIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 111\n    }\n  }))), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => {\n      selectUser(user.id);\n      setDelModal(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 40\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 111\n    }\n  }))))))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 15],\n    component: \"div\",\n    count: users.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    backIconButtonProps: {\n      'aria-label': 'previous page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'next page'\n    },\n    onChangePage: (event, pageNum) => setPage(pageNum),\n    onChangeRowsPerPage: event => {\n      setRowsPerPage(+event.target.value);\n      setPage(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default UsersList;","map":{"version":3,"sources":["/Users/evgeniy/React/user-list/src/components/UserProfile/index.jsx"],"names":["React","useEffect","useState","connect","getUsers","editUser","saveChange","postUser","selectUser","deleteUser","Paper","Table","TableHead","TableBody","TableRow","TableCell","TablePagination","IconButton","EditIcon","DeleteIcon","Grid","Button","Dialog","DialogContent","DialogActions","DialogTitle","Typography","TextField","UsersList","users","page","setPage","rowsPerPage","setRowsPerPage","errorValid","setErrorValid","disableBut","setDisableBut","editModal","setEditModal","modalSucc","setModalSucc","delModal","setDelModal","textModal","setTextModal","headRows","id","numeric","label","map","row","slice","user","num","name","surname","desc","length","event","pageNum","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { connect } from 'react-redux';\nimport { getUsers, editUser, saveChange, postUser, selectUser, deleteUser } from '../store/actions';\n\nimport './userList.css';\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst UsersList = ({users}) => {\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [errorValid, setErrorValid] = useState(false);\n  const [disableBut, setDisableBut] = useState(false);\n\n  const [editModal, setEditModal] = useState(false);\n  const [modalSucc, setModalSucc] = useState(false);\n  const [delModal, setDelModal] = useState(false);\n\n  const [textModal, setTextModal] = useState('отредактирован');\n\n  const headRows = [\n    { id: 'id', numeric: false, label: 'id' },\n    { id: 'name', numeric: true, label: 'name' },\n    { id: 'surname', numeric: true, label: 'surname' },\n    { id: 'desc', numeric: true, label: 'desc' },\n    { id: 'edit', numeric: true, label: 'Редактировать' },\n    { id: 'delete', numeric: true, label: 'Удалить' },\n  ];\n\n  return <div>\n    <Paper className='m020'>\n      <Table>\n        <TableHead >\n          <TableRow className='tableHead'>\n            {headRows.map(row => (\n              <TableCell\n                key={row.id}\n                align={row.numeric ? 'right' : 'left'}\n              >\n                {row.label}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {users.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user, num) => (\n            <TableRow key={user.id}>\n              <TableCell align=\"left\">{user.id}</TableCell>\n              <TableCell align=\"right\">{user.name}</TableCell>\n              <TableCell align=\"right\">{user.surname}</TableCell>\n              <TableCell align=\"right\">{user.desc}</TableCell>\n              <TableCell align=\"right\"><IconButton onClick={() => { editUser(user.id); setEditModal(true); }}><EditIcon /></IconButton></TableCell>\n              <TableCell align=\"right\"><IconButton onClick={() => { selectUser(user.id); setDelModal(true) }}><DeleteIcon /></IconButton></TableCell>\n            </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 15]}\n        component=\"div\"\n        count={users.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          'aria-label': 'previous page',\n        }}\n        nextIconButtonProps={{\n          'aria-label': 'next page',\n        }}\n        onChangePage={(event, pageNum) => setPage(pageNum)}\n        onChangeRowsPerPage={(event) => { setRowsPerPage(+event.target.value); setPage(0) }}\n      />\n    </Paper>\n  </div>;\n};\n\nexport default UsersList;"]},"metadata":{},"sourceType":"module"}