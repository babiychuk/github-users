{"ast":null,"code":"var _jsxFileName = \"/Users/evgeniy/React/user-list/src/components/UsersList/index.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUsers } from '../../redux/users/actions';\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport UserItem from './UserItem';\nimport Loader from '../../common/Loader';\n\nconst UsersList = () => {\n  var _list$data, _list$data2;\n\n  const dispatch = useDispatch();\n  const {\n    list\n  } = useSelector(state => state.users);\n  useEffect(() => {\n    dispatch(getUsers(100));\n  }, [dispatch]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const headRows = [{\n    id: 'avatar',\n    numeric: false,\n    label: 'User avatar'\n  }, {\n    id: 'login',\n    numeric: false,\n    label: 'Login'\n  }, {\n    id: 'profile link',\n    numeric: false,\n    label: 'Profile link'\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: \"m020\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    className: \"tableHead\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, headRows.map(row => /*#__PURE__*/React.createElement(TableCell, {\n    key: row.id,\n    align: row.numeric ? 'right' : 'left',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, row.label)))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, (list === null || list === void 0 ? void 0 : list.loading) ? /*#__PURE__*/React.createElement(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 28\n    }\n  }) : list === null || list === void 0 ? void 0 : (_list$data = list.data) === null || _list$data === void 0 ? void 0 : _list$data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(user => /*#__PURE__*/React.createElement(UserItem, {\n    key: user.id,\n    user: user,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [5, 10, 20],\n    component: \"div\",\n    count: (list === null || list === void 0 ? void 0 : list.loading) ? rowsPerPage : list === null || list === void 0 ? void 0 : (_list$data2 = list.data) === null || _list$data2 === void 0 ? void 0 : _list$data2.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    backIconButtonProps: {\n      'aria-label': 'previous page'\n    },\n    nextIconButtonProps: {\n      'aria-label': 'next page'\n    },\n    onChangePage: (event, pageNum) => setPage(pageNum),\n    onChangeRowsPerPage: event => {\n      setRowsPerPage(+event.target.value);\n      setPage(0);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default UsersList;","map":{"version":3,"sources":["/Users/evgeniy/React/user-list/src/components/UsersList/index.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","getUsers","Paper","Table","TableHead","TableBody","TableRow","TableCell","TablePagination","UserItem","Loader","UsersList","dispatch","list","state","users","page","setPage","rowsPerPage","setRowsPerPage","headRows","id","numeric","label","map","row","loading","data","slice","user","length","event","pageNum","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUsers } from '../../redux/users/actions';\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport UserItem from './UserItem';\nimport Loader from '../../common/Loader';\n\nconst UsersList = () => {\n  const dispatch = useDispatch();\n\n  const { list } = useSelector(state => state.users);\n\n\n  useEffect(() => {\n    dispatch(getUsers(100));\n  }, [dispatch])\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const headRows = [\n    { id: 'avatar', numeric: false, label: 'User avatar' },\n    { id: 'login', numeric: false, label: 'Login' },\n    { id: 'profile link', numeric: false, label: 'Profile link' },\n  ];\n\n  return <div>\n    <Paper className='m020'>\n      <Table>\n        <TableHead >\n          <TableRow className='tableHead'>\n            {headRows.map(row => (\n              <TableCell\n                key={row.id}\n                align={row.numeric ? 'right' : 'left'}\n              >\n                {row.label}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {list?.loading ? <Loader /> :\n            list?.data?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user) => (\n              \n              <UserItem key={user.id} user={user} />\n            ))}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 20]}\n        component=\"div\"\n        count={list?.loading ? rowsPerPage : list?.data?.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          'aria-label': 'previous page',\n        }}\n        nextIconButtonProps={{\n          'aria-label': 'next page',\n        }}\n        onChangePage={(event, pageNum) => setPage(pageNum)}\n        onChangeRowsPerPage={(event) => { setRowsPerPage(+event.target.value); setPage(0) }}\n      />\n    </Paper>\n  </div>;\n};\n\nexport default UsersList;"]},"metadata":{},"sourceType":"module"}