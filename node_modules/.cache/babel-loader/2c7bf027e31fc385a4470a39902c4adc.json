{"ast":null,"code":"var _jsxFileName = \"/Users/evgeniy/React/user-list/src/components/UsersList.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createUser, postUser, getUsers } from '../store/actions';\nimport './userList.css';\nimport UsersTable from \"./UsersTable\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport Add from \"@material-ui/icons/Add\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst UsersList = ({\n  createUser,\n  newUser,\n  postUser,\n  getUsers\n}) => {\n  const [modalAdd, setModalAdd] = useState(false);\n  const [modalSucc, setModalSucc] = useState(false);\n  const [errorValid, setErrorValid] = useState(false);\n  const [disableBut, setDisableBut] = useState(false);\n\n  const validate = () => {\n    if (newUser.name.length === 0 || newUser.surname.length === 0 || newUser.desc.length === 0) {\n      setErrorValid(true);\n      setTimeout(() => setErrorValid(false), 1000);\n    } else {\n      setErrorValid(false);\n      setDisableBut(true);\n      postUser();\n      setTimeout(() => {\n        getUsers();\n        setDisableBut(false);\n        setModalSucc(true);\n        setModalAdd(false);\n        createUser('clear');\n      }, 500);\n      setTimeout(() => {\n        setModalSucc(false);\n      }, 1500);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: \"root\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    className: \"m020\",\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"small\",\n    \"aria-label\": \"Split button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setModalAdd(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Add, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u043E\\u0433\\u043E \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\")), /*#__PURE__*/React.createElement(UsersTable, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    open: modalAdd,\n    \"aria-labelledby\": \"form-add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"form-add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: \"inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C\")), /*#__PURE__*/React.createElement(DialogContent, {\n    dividers: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, errorValid ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"errorMess\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0435 \\u043F\\u043E\\u043B\\u044F *\") : null, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"name\",\n    name: \"name\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    margin: \"normal\",\n    error: errorValid,\n    onChange: e => createUser(e.target.value, e.target.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"surname\",\n    name: \"surname\",\n    variant: \"outlined\",\n    required: true,\n    fullWidth: true,\n    margin: \"normal\",\n    error: errorValid,\n    onChange: e => createUser(e.target.value, e.target.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"desc\",\n    name: \"desc\",\n    variant: \"outlined\",\n    required: true,\n    placeholder: \"desc\",\n    multiline: true,\n    fullWidth: true,\n    rows: \"3\",\n    margin: \"normal\",\n    error: errorValid,\n    onChange: e => createUser(e.target.value, e.target.name),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(DialogActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => validate(),\n    disabled: disableBut,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \" \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      setModalAdd(false);\n      createUser('clear');\n    },\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))), /*#__PURE__*/React.createElement(Dialog, {\n    open: modalSucc,\n    \"aria-labelledby\": \"success-add-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"success-add-user\",\n    className: \"successAdd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, \"\\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044C \\u0443\\u0441\\u043F\\u0435\\u0448\\u043D\\u043E \\u0434\\u043E\\u0431\\u0430\\u0432\\u043B\\u0435\\u043D\")))));\n};\n\nconst mapStateToProps = state => ({\n  newUser: state.createUser\n});\n\nconst mapDispatchToProps = {\n  createUser,\n  postUser,\n  getUsers\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);","map":{"version":3,"sources":["/Users/evgeniy/React/user-list/src/components/UsersList.js"],"names":["React","useState","connect","createUser","postUser","getUsers","UsersTable","Paper","Grid","ButtonGroup","Button","Add","Dialog","DialogContent","DialogActions","DialogTitle","Typography","TextField","UsersList","newUser","modalAdd","setModalAdd","modalSucc","setModalSucc","errorValid","setErrorValid","disableBut","setDisableBut","validate","name","length","surname","desc","setTimeout","e","target","value","mapStateToProps","state","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { createUser, postUser, getUsers } from '../store/actions';\nimport './userList.css';\n\nimport UsersTable from \"./UsersTable\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\nimport Button from \"@material-ui/core/Button\";\nimport Add from \"@material-ui/icons/Add\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\n\n\n\nconst UsersList = ({ createUser, newUser, postUser, getUsers }) => {\n\n  const [modalAdd, setModalAdd] = useState(false);\n  const [modalSucc, setModalSucc] = useState(false);\n  const [errorValid, setErrorValid] = useState(false);\n  const [disableBut, setDisableBut] = useState(false);\n\n\n  const validate = () => {\n\n    if (newUser.name.length === 0 || newUser.surname.length === 0 || newUser.desc.length === 0) {\n      setErrorValid(true);\n      setTimeout(() => setErrorValid(false), 1000);\n    } else {\n\n      setErrorValid(false);\n      setDisableBut(true);\n      postUser();\n      setTimeout(() => {\n        getUsers();\n        setDisableBut(false);\n        setModalSucc(true);\n        setModalAdd(false);\n        createUser('clear');\n      }, 500);\n      setTimeout(() => {\n        setModalSucc(false);\n      }, 1500);\n    }\n\n  }\n\n  return <div>\n    <Paper className=\"root\">\n      <Grid item xs={12}>\n        <ButtonGroup className='m020'\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          aria-label=\"Split button\">\n          <Button onClick={() => setModalAdd(true)}>\n            <Add /> Добавить нового пользователя\n          </Button>\n        </ButtonGroup>\n\n        <UsersTable />\n\n      </Grid>\n\n      <Dialog\n        open={modalAdd}\n        aria-labelledby=\"form-add-user\">\n        <DialogTitle id=\"form-add-user\">\n          <Typography className=\"inline\">Новый пользователь</Typography>\n        </DialogTitle>\n        <DialogContent dividers>\n          {errorValid ?\n            <div className='errorMess'>\n              Заполните обязательные поля *</div> :\n            null\n          }\n          <Grid container>\n            <Grid item xs={12}>\n              <TextField\n                label=\"name\"\n                name=\"name\"\n                variant=\"outlined\"\n                required\n                fullWidth={true}\n                margin=\"normal\"\n                error={errorValid}\n                onChange={e => createUser(e.target.value, e.target.name)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"surname\"\n                name=\"surname\"\n                variant=\"outlined\"\n                required\n                fullWidth={true}\n                margin=\"normal\"\n                error={errorValid}\n                onChange={e => createUser(e.target.value, e.target.name)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                label=\"desc\"\n                name=\"desc\"\n                variant=\"outlined\"\n                required\n                placeholder=\"desc\"\n                multiline\n                fullWidth\n                rows=\"3\"\n                margin=\"normal\"\n                error={errorValid}\n                onChange={e => createUser(e.target.value, e.target.name)}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => validate()} disabled={disableBut}> Добавить </Button>\n          <Button onClick={() => { setModalAdd(false); createUser('clear') }} color=\"primary\">\n            Отмена\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog\n        open={modalSucc}\n        aria-labelledby=\"success-add-user\">\n        <DialogTitle id=\"success-add-user\" className=\"successAdd\">\n          <Typography >Пользователь успешно добавлен</Typography>\n        </DialogTitle>\n      </Dialog>\n\n    </Paper>\n  </div>;\n};\n\n\nconst mapStateToProps = state => ({\n  newUser: state.createUser\n});\n\nconst mapDispatchToProps = { createUser, postUser, getUsers };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersList);"]},"metadata":{},"sourceType":"module"}