{"ast":null,"code":"var _jsxFileName = \"/Users/evgeniy/React/user-list/src/components/UsersList/UserItem/index.jsx\";\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport routes from '../../../routes';\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  large: {\n    width: theme.spacing(12.5),\n    height: theme.spacing(12.5)\n  },\n  color: {\n    color: '#224456'\n  },\n  popover: {\n    pointerEvents: 'none'\n  },\n  paper: {\n    padding: theme.spacing(1)\n  }\n}));\n\nconst UserItem = ({\n  user\n}) => {\n  const classes = useStyles();\n  const [isHovered, setIsHovered] = useState(false);\n\n  const handleMouseEnter = () => {\n    setIsHovered(!isHovered);\n  };\n\n  const handleMouseLeave = () => {\n    setIsHovered(!isHovered);\n  };\n\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handlePopoverOpen = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handlePopoverClose = () => {\n    setAnchorEl(null);\n  };\n\n  const open = Boolean(anchorEl);\n  return /*#__PURE__*/React.createElement(TableRow, {\n    key: user.id,\n    hover: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    \"aria-owns\": open ? 'mouse-over-popover' : undefined,\n    \"aria-haspopup\": \"true\",\n    onMouseEnter: handlePopoverOpen,\n    onMouseLeave: handlePopoverClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `${routes.UserProfile.path}${user.login}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 21\n    }\n  }, user.login)), /*#__PURE__*/React.createElement(Popover, {\n    id: \"mouse-over-popover\",\n    className: classes.popover,\n    classes: {\n      paper: classes.paper\n    },\n    open: open,\n    anchorEl: anchorEl,\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    transformOrigin: {\n      vertical: 'top',\n      horizontal: 'left'\n    },\n    onClose: handlePopoverClose,\n    disableRestoreFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: user.avatar_url,\n    src: user.avatar_url,\n    className: classes.large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: user.html_url,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 37\n    }\n  }, user.html_url)));\n};\n\nexport default UserItem;","map":{"version":3,"sources":["/Users/evgeniy/React/user-list/src/components/UsersList/UserItem/index.jsx"],"names":["React","useState","Link","routes","TableRow","TableCell","Avatar","Popover","Typography","makeStyles","useStyles","theme","large","width","spacing","height","color","popover","pointerEvents","paper","padding","UserItem","user","classes","isHovered","setIsHovered","handleMouseEnter","handleMouseLeave","anchorEl","setAnchorEl","handlePopoverOpen","event","currentTarget","handlePopoverClose","open","Boolean","id","undefined","UserProfile","path","login","vertical","horizontal","avatar_url","html_url"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport routes from '../../../routes';\n\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        width: theme.spacing(12.5),\n        height: theme.spacing(12.5),\n    },\n    color: { color: '#224456', },\n    popover: {\n        pointerEvents: 'none',\n    },\n    paper: {\n        padding: theme.spacing(1),\n    },\n}));\n\nconst UserItem = ({ user }) => {\n    const classes = useStyles();\n\n    const [isHovered, setIsHovered] = useState(false);\n\n    const handleMouseEnter = () => {\n        setIsHovered(!isHovered);\n    }\n\n    const handleMouseLeave = () => {\n        setIsHovered(!isHovered);\n    }\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handlePopoverOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handlePopoverClose = () => {\n        setAnchorEl(null);\n    };\n\n    const open = Boolean(anchorEl);\n\n    return (\n        <TableRow key={user.id} hover>\n            {/* {isHovered && <TableCell align=\"left\"><Avatar alt=\"Remy Sharp\" src={user.avatar_url} className={classes.large} /></TableCell>} */}\n            <TableCell align=\"left\">\n                <Typography\n                    aria-owns={open ? 'mouse-over-popover' : undefined}\n                    aria-haspopup=\"true\"\n                    onMouseEnter={handlePopoverOpen}\n                    onMouseLeave={handlePopoverClose}\n                >\n                    <Link to={`${routes.UserProfile.path}${user.login}`}>{user.login}</Link>\n                </Typography>\n                <Popover\n                    id=\"mouse-over-popover\"\n                    className={classes.popover}\n                    classes={{\n                        paper: classes.paper,\n                    }}\n                    open={open}\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    onClose={handlePopoverClose}\n                    disableRestoreFocus\n                >\n                    <Typography><Avatar alt={user.avatar_url} src={user.avatar_url} className={classes.large} /></Typography>\n                </Popover>\n            </TableCell>\n            <TableCell align=\"left\"><a href={user.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{user.html_url}</a></TableCell>\n        </TableRow>\n    )\n};\n\nexport default UserItem;"]},"metadata":{},"sourceType":"module"}