{"version":3,"sources":["components/UsersList/UserItem/index.jsx","common/TableLoader/index.jsx","components/UsersList/index.jsx","services/API.js","redux/users/actions.js"],"names":["useStyles","makeStyles","theme","large","width","spacing","height","color","popover","pointerEvents","paper","padding","UserItem","user","classes","useState","anchorEl","setAnchorEl","hoverUser","setHoverUser","handlePopoverClose","open","Boolean","TableRow","key","id","TableCell","align","Typography","aria-owns","undefined","aria-haspopup","hover","onMouseEnter","event","currentTarget","onMouseLeave","to","routes","UserProfile","path","login","Popover","className","anchorOrigin","vertical","horizontal","transformOrigin","onClose","disableRestoreFocus","Avatar","alt","avatar_url","src","href","html_url","target","rel","TableLoader","colSpan","CircularProgress","headRows","numeric","label","UsersList","dispatch","useDispatch","useSelector","state","users","list","data","loading","Number","parseInt","localStorage","getItem","page","setPage","rowsPerPage","setRowsPerPage","useEffect","localPage","localPerPage","getUsers","handleChangePage","pageNum","setItem","Paper","Table","TableHead","map","row","TableBody","slice","TablePagination","rowsPerPageOptions","component","count","length","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","value","per_page","axios","get","user_name","a","type","types","API","status","Error","payload","response","console","log","getUserProfile"],"mappings":"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","file":"static/js/UsersList.33feabfc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport routes from '../../../routes';\n\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        width: theme.spacing(12.5),\n        height: theme.spacing(12.5),\n    },\n    color: { color: '#224456', },\n    popover: {\n        pointerEvents: 'none',\n    },\n    paper: {\n        padding: theme.spacing(1),\n    },\n}));\n\nconst UserItem = ({ user }) => {\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n    const [hoverUser, setHoverUser] = useState(null);\n\n    const handlePopoverOpen = (event) => {\n        setAnchorEl(event.currentTarget);\n        setHoverUser(!hoverUser);\n    };\n\n    const handlePopoverClose = () => {\n        setAnchorEl(null);\n        setHoverUser(!hoverUser);\n    };\n\n    const open = Boolean(anchorEl);\n\n    return (\n        <TableRow key={user.id} >\n            <TableCell align=\"left\">\n                <Typography\n                    aria-owns={open ? 'mouse-over-popover' : undefined}\n                    aria-haspopup=\"true\"\n                    hover onMouseEnter={handlePopoverOpen}\n                    onMouseLeave={handlePopoverClose}\n                >\n                    <Link to={`${routes.UserProfile.path}${user.login}`}>{user.login}</Link>\n                </Typography>\n                {hoverUser && \n                <Popover\n                    id=\"mouse-over-popover\"\n                    className={classes.popover}\n                    classes={{\n                        paper: classes.paper,\n                    }}\n                    open\n                    anchorEl={anchorEl}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left',\n                    }}\n                    onClose={handlePopoverClose}\n                    disableRestoreFocus\n                >\n                    <Avatar alt={user.avatar_url} src={user.avatar_url} className={classes.large} />\n                </Popover> }\n            </TableCell>\n            <TableCell align=\"left\"><a href={user.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{user.html_url}</a></TableCell>\n        </TableRow>\n    )\n};\n\nexport default UserItem;","import React from 'react';\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst TableLoader = ({ colSpan }) => {\n    return (\n        <TableRow>\n            <TableCell colSpan={colSpan} align=\"center\">\n                <CircularProgress />\n            </TableCell>\n        </TableRow>\n    );\n}\nexport default TableLoader;","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getUsers } from '../../redux/users/actions';\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from '@material-ui/core/TablePagination';\nimport UserItem from './UserItem';\nimport TableLoader from '../../common/TableLoader';\n\nconst headRows = [\n  { id: 'login', numeric: false, label: 'Login' },\n  { id: 'profile link', numeric: false, label: 'Profile link' },\n];\n\nconst UsersList = () => {\n  const dispatch = useDispatch();\n  const { data, loading } = useSelector(state => state.users.list);\n  const [page, setPage] = useState(Number.parseInt(localStorage.getItem(`users_page`)));\n  const [rowsPerPage, setRowsPerPage] = useState(Number.parseInt(localStorage.getItem(`users_per_page`)));\n\n  useEffect(() => {\n    const localPage = localStorage.getItem(`users_page`);\n    const localPerPage = localStorage.getItem(`users_per_page`);\n    if(!localPage){\n      setPage(0);\n    }\n\n    if(!localPerPage){\n      setRowsPerPage(5);\n    }\n  }, [])\n\n  useEffect(() => {\n    const per_page = 100;\n    dispatch(getUsers(per_page));\n  }, [dispatch])\n\n  const handleChangePage = (event, pageNum) => { \n    setPage(pageNum);\n    localStorage.setItem(`users_page`, pageNum);   \n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value); \n    handleChangePage(event, 0);\n    localStorage.setItem(`users_per_page`, event.target.value);\n  }\n  \n  return <div>\n    <Paper className='m020'>\n      <Table>\n        <TableHead >\n          <TableRow className='tableHead'>\n            {headRows.map(row => (\n              <TableCell\n                key={row.id}\n                align={row.numeric ? 'right' : 'left'}\n              >\n                {row.label}\n              </TableCell>\n            ))}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {loading ? <TableLoader colSpan={3}/> :\n            data?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user) => (\n              <UserItem key={user.id} user={user} />\n            ))}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 20]}\n        component=\"div\"\n        count={loading ? rowsPerPage : data?.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        backIconButtonProps={{\n          'aria-label': 'previous page',\n        }}\n        nextIconButtonProps={{\n          'aria-label': 'next page',\n        }}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  </div>;\n};\n\nexport default UsersList;","import axios from 'axios';\n\nexport const users = {\n  list: (per_page) => axios.get(`https://api.github.com/users?per_page=${per_page}`),\n  profile: (user_name) => axios.get(`https://api.github.com/users/${user_name}`),\n};","import * as API from '../../services/API';\nimport * as types from '../types';\n\nexport const getUsers = (per_page) => async dispatch => {\n    dispatch({ type: types.GET_USERS_START });\n    try {\n      const { data, status } = await API.users.list(per_page);\n      if (status < 200 && status >= 300) throw new Error('Something went wrong');\n      dispatch({ type: types.GET_USERS_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: types.GET_USERS_FAILURE });\n      if (+error?.response?.status === 401) return;\n      console.log(error?.response?.data);\n    }\n  };\n\n  export const getUserProfile = (user_name) => async dispatch => {\n    dispatch({ type: types.GET_USER_PROFILE_START });\n    try {\n      const { data, status } = await API.users.profile(user_name);\n      if (status < 200 && status >= 300) throw new Error('Something went wrong');\n      dispatch({ type: types.GET_USER_PROFILE_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: types.GET_USER_PROFILE_FAILURE });\n      if (+error?.response?.status === 401) return;\n      console.log(error?.response?.data);\n    }\n  };"],"sourceRoot":""}