{"version":3,"sources":["common/ButtonBack/index.jsx","components/UserProfile/index.jsx","services/API.js","redux/users/actions.js"],"names":["useStyles","makeStyles","theme","arrowBack","padding","spacing","ButtonBack","classes","Grid","container","to","routes","UsersList","path","className","Button","variant","color","size","button","startIcon","root","flexGrow","paper","margin","maxWidth","image","width","height","img","display","maxHeight","UserProfile","dispatch","useDispatch","id","useParams","useSelector","state","users","profile","data","loading","useEffect","getUserProfile","Paper","alignItems","CircularProgress","item","ButtonBase","alt","src","avatar_url","xs","sm","direction","Typography","gutterBottom","name","followers","following","created_at","moment","format","company","email","location","blog","bio","per_page","axios","get","user_name","getUsers","a","type","types","API","status","Error","payload","response","console","log"],"mappings":"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","file":"static/js/UserProfile.5b19169e.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport routes from '../../routes';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    arrowBack: {\n        padding: theme.spacing(2),\n    },\n}));\n\nconst ButtonBack = () => {\n    const classes = useStyles();\n    return (\n        <Grid container>\n            <Link to={routes.UsersList.path} className={classes.arrowBack}>\n                <Button\n                    variant=\"contained\"\n                    color=\"primary\"\n                    size=\"large\"\n                    className={classes.button}\n                    startIcon={<ArrowBackIcon />}\n                >\n                    Back\n                </Button>\n            </Link>\n        </Grid>\n    );\n}\nexport default ButtonBack;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport moment from 'moment';\nimport { getUserProfile } from '../../redux/users/actions';\n\nimport ButtonBack from '../../common/ButtonBack';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: 'auto',\n    maxWidth: 500,\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\n\nconst UserProfile = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const { data, loading } = useSelector(state => state.users.profile);\n\n  useEffect(() => {\n    dispatch(getUserProfile(id));\n  }, [dispatch, id])\n\n  return (\n    <div className={classes.root}>\n      <ButtonBack />\n      <Paper className={classes.paper}>\n        {loading ?\n          <Grid container alignItems='center'>\n            <CircularProgress />\n          </Grid>\n          :\n          <Grid container spacing={2}>\n            <Grid item>\n              <ButtonBase className={classes.image}>\n                <img className={classes.img} alt=\"complex\" src={data?.avatar_url} />\n              </ButtonBase>\n            </Grid>\n            <Grid item xs={12} sm container>\n              <Grid item xs container direction=\"column\" spacing={2}>\n                <Grid item xs>\n                  <Typography gutterBottom variant=\"subtitle1\">\n                    {data?.name ? data?.name : \"is missing\"}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Followers: {data?.followers ? data?.followers : \"is missing\"}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Followers: {data?.following ? data?.following : \"is missing\"}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Created: {data?.created_at ? moment(data?.created_at).format('YYYY/MM/DD') : \"is missing\"}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Company: {data?.company ? data?.company : \"is missing\"}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Email: {data?.email ? data?.email : \"is missing\"}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Location: {data?.location ? data?.location : \"is missing\"}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Blog: {data?.blog ? data?.blog : \"is missing\"}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"textSecondary\">\n                    Bio: {data?.bio ? data?.bio : \"is missing\"}\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        }\n      </Paper>\n    </div>\n  )\n};\n\nexport default UserProfile;","import axios from 'axios';\n\nexport const users = {\n  list: (per_page) => axios.get(`https://api.github.com/users?per_page=${per_page}`),\n  profile: (user_name) => axios.get(`https://api.github.com/users/${user_name}`),\n};","import * as API from '../../services/API';\nimport * as types from '../types';\n\nexport const getUsers = (per_page) => async dispatch => {\n    dispatch({ type: types.GET_USERS_START });\n    try {\n      const { data, status } = await API.users.list(per_page);\n      if (status < 200 && status >= 300) throw new Error('Something went wrong');\n      dispatch({ type: types.GET_USERS_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: types.GET_USERS_FAILURE });\n      if (+error?.response?.status === 401) return;\n      console.log(error?.response?.data);\n    }\n  };\n\n  export const getUserProfile = (user_name) => async dispatch => {\n    dispatch({ type: types.GET_USER_PROFILE_START });\n    try {\n      const { data, status } = await API.users.profile(user_name);\n      if (status < 200 && status >= 300) throw new Error('Something went wrong');\n      dispatch({ type: types.GET_USER_PROFILE_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({ type: types.GET_USER_PROFILE_FAILURE });\n      if (+error?.response?.status === 401) return;\n      console.log(error?.response?.data);\n    }\n  };"],"sourceRoot":""}